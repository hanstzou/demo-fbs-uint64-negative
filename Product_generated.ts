// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @constructor
 */
export class Product {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Product
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Product {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Product= obj
 * @returns Product
 */
static getRootAsProduct(bb:flatbuffers.ByteBuffer, obj?:Product):Product {
  return (obj || new Product()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Product= obj
 * @returns Product
 */
static getSizePrefixedRootAsProduct(bb:flatbuffers.ByteBuffer, obj?:Product):Product {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Product()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
U32():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns flatbuffers.Long
 */
U64():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @param flatbuffers.Builder builder
 */
static startProduct(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number U32
 */
static addU32(builder:flatbuffers.Builder, U32:number) {
  builder.addFieldInt32(0, U32, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long U64
 */
static addU64(builder:flatbuffers.Builder, U64:flatbuffers.Long) {
  builder.addFieldInt64(1, U64, builder.createLong(0, 0));
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endProduct(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createProduct(builder:flatbuffers.Builder, U32:number, U64:flatbuffers.Long):flatbuffers.Offset {
  Product.startProduct(builder);
  Product.addU32(builder, U32);
  Product.addU64(builder, U64);
  return Product.endProduct(builder);
}
}
